#!/usr/bin/env python
import sys
import re
from FWCore.ParameterSet.Types import PSet

try:
    cfiFile = sys.argv[1]
except IndexError:
    print 'Usage: jetIDCutConfig.py PUJETID_PARAMS_FILE'
    sys.exit(1)

# import the cfi.py file defining cuts
# example: RecoJets/JetProducers/python/puJetIDParams_cfi.py (CMSSW_7_4_6)
execfile(cfiFile)

# cut data is in form
# [MVA training name] = cms.PSet([ptbin]_(Tight|Medium|Loose|MET) = cms.vdouble(cuts in eta bins), ..)
# extract all psets first
psets = []
for name in dir():
    obj = eval(name)
    if type(obj) == PSet:
        psets.append((name, obj))

# write to output
with open('jetIDCuts.dat', 'w') as outputFile:
    outputFile.write('# generated by MitPhysics/bin/jetIDCutConfig.py\n# from ' + cfiFile + '\n\n')

    for name, pset in psets:
        # block = Tight, Medium, Loose, MET
        blocks = {}
        for paramName in pset.parameterNames_():
            matches = re.match('Pt([0-9]+)_(.+)', paramName)
            if not matches:
                continue

            blockName = matches.group(2)
            if blockName not in blocks:
                blocks[blockName] = [0.] * 4

            param = getattr(pset, paramName)
            cutsAsStr = map(str, param.value())
            line = ' '.join(cutsAsStr)

            ptBin = matches.group(1)
            if ptBin == '010':
                blocks[blockName][0] = line
            elif ptBin == '1020':
                blocks[blockName][1] = line
            elif ptBin == '2030':
                blocks[blockName][2] = line
            elif ptBin == '3050':
                blocks[blockName][3] = line

        for blockName, lines in blocks.items():
            outputFile.write(name + ' ' + blockName + '\n')
            for line in lines:
                outputFile.write(line + '\n')

            outputFile.write('\n')

